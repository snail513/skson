/*
 * PLC_ExecFunctions.h
 *
 *  Created on: 2014. 10. 27.
 *      Author: skson
 */

#ifndef PLC_EXECFUNCTIONS_H_
#define PLC_EXECFUNCTIONS_H_
#include "PLC_Operator.h"
#include "PLC_PreExecFunctions.h"

#if 1
#define printEXEC (printf("[Error] while %s[%d]\n", __FUNCTION__, __LINE__))
#else
#define printEXEC
#endif

uint32 execNOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNOPLF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPAGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDIP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDIF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDIP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDIF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORIP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORIF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMRD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMPP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execINV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMEF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEGF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPLS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPLF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDELTA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDELTAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMCR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFEND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDENE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDELT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDELE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDEDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTREQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTRNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTRGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTRLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTRGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLDSTRLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDENE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDELT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDELE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDEDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTREQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTRNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTRGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTRLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTRGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execANDSTRLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORENE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORELT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORELE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOREDLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTREQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTRNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTRGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTRLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTRGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execORSTRLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPEQP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPNEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPGTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPGEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKCMPLEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPEQ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPNE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPGT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPGE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPLE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPEQP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPNEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPGTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPGEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBKCMPLEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execESUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execESUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execESUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execESUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDMLT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDMLTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDDIV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDDIVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKSUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKSUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKSUBS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKSUBPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRADDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRADDPS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execINC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execINCP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDEC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDECP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDINC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDINCP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDDEC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDDECP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBLKTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBLKTOBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBLKTOBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBLKTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTODF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTODFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOGRY(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOGRYP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTOF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFTOFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTODF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTODFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOGRY(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOGRYP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTODF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTODFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execGRYTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execGRYTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execGRYTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execGRYTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNEG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDNEG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDNEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execENEG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execENEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDENEG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDENEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFMOV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEDMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFMOVP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCML(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDCML(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCMLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDCMLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execXCH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXCH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBXCH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execXCHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXCHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBXCHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSWAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSWAPP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCJ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSCJ(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execJMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execGOEND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIMASK(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIRET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRFS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRFSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCNT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCNTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTTMR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTMR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execROTC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRAMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSPD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPLSY(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPWM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMTR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPOINT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXNR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXNR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKXOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKXNR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXNRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXNRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKXORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKXNRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWANDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWORS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXORS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXNRS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDANDS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDORS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXORS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXNRS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWANDSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWORSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXORSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWXNRSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDANDSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDORSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXORSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDXNRSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execROR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRCR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execROL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRCL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDROR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDRCR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDROL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDRCL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRCRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execROLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRCLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDRORP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDRCRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDROLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDRCLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSFR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSFL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSFR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSFL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSFLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSFRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSFLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSFRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSFLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBRST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSETP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBRSTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTEST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTESTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTEST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTESTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKRST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBKRSTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSRCH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSRCH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSRCHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSRCHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCHKSUM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDCHKSUM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCHKSUMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDCHKSUMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execENCODE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDECODE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execENCODEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDECODEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSEG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSEGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDIS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDISP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execUNI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execUNIP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNDIS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNDISP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNUNI(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNUNIP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOW(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOWP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMAX(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMAXP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMIN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMINP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSORT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSORT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSUM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDWSUM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWSUMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDWSUMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFOR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execNEXT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBREAK(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBREAKP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCALL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCALLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCALLS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCALLSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFCALL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFCALLP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFCALLS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFCALLSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execXCALL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCOM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIX(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIXEND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIXDEV(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execIXSET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFIFW(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFIFWP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFIFR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFIFRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFPOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFPOPP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFPDEL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFPDELP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFINS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFINSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFROM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFROMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFROM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDFROMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTO(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTO(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTODA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOHA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTODA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOHA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTODA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOHA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBCDTODA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBCDTOHA(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATOBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATODBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHATOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHATOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTODAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOHAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTODAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOHAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTODAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOHAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBCDTODAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBCDTOHAP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATOBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATODBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHATOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHATODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCOMRD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCOMRDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLEN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLENP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOSTR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOSTRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOSTR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDTOSTRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTOD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTODP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOSTR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOSTRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTOF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRTOFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOASC(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTOASCP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execASCTOB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execASCTOBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRIGHT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLEFT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMIDR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMIDW(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execINSTR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRINS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRDEL(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRIGHTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLEFTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMIDRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execMIDWP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execINSTRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRINSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSTRDELP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOBCD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execFTOBCDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOF(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCDTOFP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSIN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCOS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTAN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execASIN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execACOS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execATAN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSINP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execCOSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTANP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execASINP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execACOSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execATANP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRAD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRADP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSQR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSQRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEXP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execEXPP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLOG(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLOGP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPOW(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execPOWP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLOG10(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLOG10P(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRANDOM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRANDOMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSRANDOM(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSRANDOMP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSQR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSQR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSQRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDSQRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSIN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCOS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTAN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBASIN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBACOS(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBATAN(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBSINP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBCOSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBTANP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBASINP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBACOSP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBATANP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLIMIT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDLIMIT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execLIMITP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDLIMITP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execBANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBAND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDBANDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZONE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZONEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDZONE(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDZONEP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRSET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execRSETP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATERD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATERDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATEWR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATEWRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATEADD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATEADDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATESUB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDATESUBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSECOND(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execSECONDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHOUR(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execHOURP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWDT(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execWDTP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execDUTY(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execTIMCHK(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZRRDB(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZRRDBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZRWRP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZRWRBP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADRSET(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execADRSETP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZPUSH(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZPUSHP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZPOP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execZPOPP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execUNIRD(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execUNIRDP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_T(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_TP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUTH_T(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUTH_TP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_ST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_STP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUTH_ST(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUTH_STP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_C(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_CP(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_F(uint8 inst[], uint32* pos, PLC_Operator* opt);
uint32 execOUT_FP(uint8 inst[], uint32* pos, PLC_Operator* opt);

#endif /* PLC_EXECFUNCTIONS_H_ */
