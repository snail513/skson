/*
 ============================================================================
 Name        : MergeSort.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>

void part_int(int arr[],int min,int max);
void part_short(short arr[],int min,int max);
void merge_int(int arr[],int min,int mid,int max);
void merge_short(short arr[],int min,int mid,int max);

int main(void) {
	puts("!!!Hello World!!!"); /* prints !!!Hello World!!! */
	int i;

	int size = 100;
	int arr[100];
	for(i = 0; i< size; i++)
	{
		arr[i] = rand();

	}

	printf("\n\t------- Merge sorting -------\n\n");
	for(i=0; i<size; i++)
	{
		printf("%d ",arr[i]);
		if(i%10==9)
			printf("\n",arr[i]);
	}
	part_int(arr,0,size-1);

	printf("\n\t------- Merge result -------\n\n");

	for(i=0; i<size; i++)
		printf("%d ",arr[i]);

	return EXIT_SUCCESS;

}

void part_int(int arr[],int min,int max)
{
	int mid;
	if(min<max)
	{
		mid=(min+max)/2;
		part_int(arr,min,mid);
		part_int(arr,mid+1,max);
		merge_int(arr,min,mid,max);
	}
}


void merge_int(int arr[],int min,int mid,int max)
{
	int tmp[30];
	int i,j,k,m;
	j=min;
	m=mid+1;
	for(i=min; j<=mid && m<=max ; i++)
	{
		if(arr[j]<=arr[m])
		{
		 tmp[i]=arr[j];
		 j++;
		}
		else
		{
		 tmp[i]=arr[m];
		 m++;
		}
	}
	if(j>mid)
	{
		for(k=m; k<=max; k++)
		{
		 tmp[i]=arr[k];
		 i++;
		}
	}
	else
	{
		for(k=j; k<=mid; k++)
		{
			tmp[i]=arr[k];
			i++;
		}
	}
	for(k=min; k<=max; k++)
		arr[k]=tmp[k];
}


void part_short(short arr[],int min,int max)
{
	int mid;
	if(min<max)
	{
		mid=(min+max)/2;
		part_short(arr,min,mid);
		part_short(arr,mid+1,max);
		merge_short(arr,min,mid,max);
	}
}


void merge_short(short arr[],int min,int mid,int max)
{
	int tmp[30];
	int i,j,k,m;
	j=min;
	m=mid+1;
	for(i=min; j<=mid && m<=max ; i++)
	{
		if(arr[j]<=arr[m])
		{
		 tmp[i]=arr[j];
		 j++;
		}
		else
		{
		 tmp[i]=arr[m];
		 m++;
		}
	}
	if(j>mid)
	{
		for(k=m; k<=max; k++)
		{
		 tmp[i]=arr[k];
		 i++;
		}
	}
	else
	{
		for(k=j; k<=mid; k++)
		{
			tmp[i]=arr[k];
			i++;
		}
	}
	for(k=min; k<=max; k++)
		arr[k]=tmp[k];
}
